<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meng.store.model.mapper.PublishMapper">
    <!-- 配置 数据库列和实体类的属性的对应关系 https://mybatis.org/mybatis-3/zh/sqlmap-xml.html -->
    <resultMap id="publishMap" type="com.meng.store.model.dto.PublishDto">
        <!--主键字段的对应 -->
        <id property="id" javaType="Integer" column="id"/>
        <!-- 非主键字段的对应-->
        <result property="aid" javaType="Integer" column="aid"/>
        <result property="uid" javaType="Integer" column="uid"/>
        <result property="latest" javaType="Integer" column="latest"/>
        <result property="version" javaType="String" column="versions"/>
        <result property="intro" javaType="String" column="intro"/>
        <result property="url" javaType="String" column="url"/>
        <result property="env" javaType="String" column="env"/>
        <result property="createTime" javaType="String" column="create_time"/>
        <result property="modifyTime" javaType="String" column="modify_time"/>
    </resultMap>

    <select id="queryRecord" resultMap="publishMap">
        SELECT * FROM publish_record where aid= #{aid}
        <if test="env != null and env != ''">
            and env= #{env}
        </if>
        order by modify_time desc
    </select>

    <!--    <insert id="createRecord" useGeneratedKeys="true" keyProperty="id">-->
    <insert id="createRecord">
        insert into publish_record (aid,uid,url,file,env,intro,versions,create_time,modify_time,latest)
        values (#{aid},#{uid},#{url},#{file},#{env},#{intro},#{version},#{date},#{date},1);
        <!-- AFTER一般用于Mysql自增的情况下，BEFORE一般用于自定义的ID的获取 -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <delete id="deleteRecord">
        delete from publish_record where id= #{id};
    </delete>

    <update id="assignVersion">
        update publish_record set latest=1, modify_time= #{modifyTime} where id= #{id};
    </update>

    <update id="updatePublish">
        update publish_record set latest= #{latest} where id= #{id};
    </update>

    <select id="getLatest" resultMap="publishMap">
        select * from publish_record where aid= #{aid} and env=#{env} order by modify_time desc limit 0,1;
    </select>

    <select id="getNewest" resultMap="publishMap">
        select * from publish_record where aid= #{aid} and latest=1;
    </select>

    <select id="getRecord" resultMap="publishMap">
        select * from publish_record where id= #{id};
    </select>

</mapper>